@inject GeneralViewModel generalViewModel


<div class="grid-container-i">

    @if (formVisible)
    {
        <div class="info-text">
            <p>Zarządzaj listą swoich klientów. Użyj guzika "Dodaj Nowego Klienta",aby uzupełnić listę kontaktów.</p>
            <p>Edytuj oraz usuwaj Klientów z głównej listy. Tekst do zupełnienia.</p>
        </div>
    }

    <div>
        <button class="info" @onclick="ShowHideForm"></button>
    </div>
</div>

<RadzenTemplateForm Data="@App.ClientsPage.NewClient" Submit="@(async (CreateClient.Request args) => { await App.ClientsPage.SubmitNewClient(args); })">

    <div class="shadow-lg bg-white rounded form" >
        <RadzenFieldset Text="Nowy Klient">
            <i class="user-icon"><img  src="/Images/icons8-add-user-male-36.png" /></i>
            <div class="grid-container add-client ">
                <div class="">
                    <RadzenLabel Text="Nazwa" Style="font-size: 14px; font-weight:bold" />
                </div>
                <div class="">
                    <RadzenTextArea Placeholder="Nazwa..." @bind-Value="App.ClientsPage.NewClient.Name" style="width: 100%;" Name="Nazwa" />
                    <RadzenRequiredValidator Component="Nazwa" Text="Name cannot be empty!"  tyle="width: 100%;" />
                    <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Nazwa" Style="position: absolute" />
                </div>
                <div class="">
                    <RadzenLabel Text="Adres" Style="font-size: 14px; font-weight:bold" />
                </div>
                <div class="">
                    <RadzenTextArea Placeholder="Adres..." @bind-Value="App.ClientsPage.NewClient.Address" style="width: 100%;" Name="Address" />
                    <RadzenLengthValidator Max="200" Text="Maksymalnie 200 znaków!" Component="Address"  Style="position: absolute" />
                </div>

                <div class="">
                    <RadzenLabel Text="Telefon" Style="font-size: 14px; font-weight:bold" />
                </div>
                <div class="">
                    <RadzenTextBox Placeholder="Telefon..." @bind-Value="App.ClientsPage.NewClient.PhoneNumber" style="width: 100%;" Name="PhoneNumber" />
                    <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="PhoneNumber" Style="position: absolute" />
                </div>

                <div class="">
                    <RadzenLabel Text="Email" Style="font-size: 14px; font-weight:bold" />
                </div>
                <div class="">
                    <RadzenTextBox Placeholder="Adres Email..." @bind-Value="App.ClientsPage.NewClient.Email" style="width: 100%;" Name="Email" />
                    <RadzenRequiredValidator Component="Email" Text="Email address cannot be empty!" Style="position: absolute" />
                    <RadzenEmailValidator Component="Email" Text="Nieprawidłowy adres Email!" />
                    <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Email" Style="position: absolute" />
                </div>
            </div>
        </RadzenFieldset>
    </div>


    <div class="row justify-content-center container">
        <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Dodaj Klienta" ButtonStyle="ButtonStyle.Secondary" />
        </div>
    </div>

</RadzenTemplateForm>


<div class="row admin-panel">
    <div class="col-8">
        <div class="client-list mx-5 shadow-lg bg-white rounded">
            <RadzenGrid @ref="App.ClientsPage.ClientsGrid" AllowFiltering="true" AllowPaging="true" PageSize="10" AllowSorting="true"
                        Data="@App.Clients" TItem="ClientViewModel" RowUpdate="@App.ClientsPage.OnUpdateClientRow" RowSelect="@(args => App.ClientsPage.ClientSelected(args))">
                <Columns>
                    <RadzenGridColumn TItem="ClientViewModel" Property="Name" Title="Nazwa">
                        <EditTemplate Context="client">
                            <RadzenTextBox @bind-Value="client.Name" Style="width:100%; display: block" Name="Nazwa" />
                            <RadzenRequiredValidator Text="Nazwa nie może być pusta!" Component="Nazwa" Popup="true" />
                            <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Nazwa" Popup="true" />
                        </EditTemplate>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="ClientViewModel" Property="Address" Title="Adres">
                        <EditTemplate Context="client">
                            <RadzenTextBox @bind-Value="client.Address" Style="width:100%; display: block" Name="Adres" />
                            <RadzenLengthValidator Max="200" Text="Maksymalnie 200 znaków!" Component="Adres" Popup="true" Style="position: absolute" />
                        </EditTemplate>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="ClientViewModel" Property="Email" Title="Email">
                        <EditTemplate Context="client">
                            <RadzenTextBox @bind-Value="client.Email" Style="width:100%; display: block" Name="Email" />
                            <RadzenEmailValidator Component="Email" Text="Nieprawidłowy adres Email!" Popup="true" />
                            <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Email" Popup="true" Style="position: absolute" />
                        </EditTemplate>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="ClientViewModel" Property="PhoneNumber" Title="Telefon">
                        <EditTemplate Context="client">
                            <RadzenTextBox @bind-Value="client.PhoneNumber" Style="width:100%; display: block" Name="Telefon" />
                            <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Telefon" Popup="true" Style="position: absolute" />
                        </EditTemplate>
                    </RadzenGridColumn>

                    <RadzenGridColumn TItem="ClientViewModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px" Title="Edytuj">
                        <Template Context="client">
                            <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@(args => App.ClientsPage.EditClientRow(client))">
                            </RadzenButton>
                        </Template>
                        <EditTemplate Context="client">
                            <RadzenButton Icon="save" Size="ButtonSize.Medium" Click="@((args) => App.ClientsPage.SaveClientRow(client))">
                            </RadzenButton>
                            <RadzenButton Icon="cancel" Size="ButtonSize.Medium" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => App.ClientsPage.CancelClientEdit(client))">
                            </RadzenButton>
                        </EditTemplate>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="ClientViewModel" Context="order" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px" Title="Archiwizuj">
                        <Template Context="client">
                            <RadzenButton ButtonStyle="ButtonStyle.Warning" Icon="close" Size="ButtonSize.Medium" Click="@(async (args) => await App.ClientsPage.ArchivizeClient(client))">
                            </RadzenButton>
                        </Template>
                        <EditTemplate Context="client">
                            <RadzenButton ButtonStyle="ButtonStyle.Warning" Icon="close" Size="ButtonSize.Medium" Click="@(async (args) => await App.ClientsPage.ArchivizeClient(client))">
                            </RadzenButton>
                        </EditTemplate>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="ClientViewModel" Context="order" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px" Title="Usuń">
                        <Template Context="client">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(async (args) => await App.ClientsPage.DeleteClientRow(client))">
                            </RadzenButton>
                        </Template>
                        <EditTemplate Context="client">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(async (args) => await App.ClientsPage.DeleteClientRow(client))">
                            </RadzenButton>
                        </EditTemplate>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </div>

        @if (App.ClientsPage.SelectedClient != null)
        {
            <div class="contact-details mx-5  shadow-lg bg-white rounded">
                <p class="p-5">@App.ClientsPage.SelectedClient.Name</p>
                <p class="p-5">Placeholder, zeby wyswietlac detale kontaktow.</p>
            </div>
        }

    </div>
</div>
