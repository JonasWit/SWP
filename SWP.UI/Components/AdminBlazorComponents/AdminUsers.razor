<div class="section">
    <RadzenCard>
        <div class="columns is-0 is-centered">
            <h2>All Active Profiles</h2>
        </div>
        <div class="columns is-0 is-centered">
            <RadzenListBox AllowFiltering="true" @bind-Value="ProfilesFilterValue" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data="@(UsersStore.GetState().AllProfiles)" TextProperty="ProfileName" ValueProperty="Id" Style="width:600px; height:200px;" />
        </div>
    </RadzenCard>
</div>

<div class="section">
    <RadzenCard>
        <div class="columns is-0 is-centered">
            <h2>Users</h2>
        </div>
        <div class="columns is-0 is-centered">
            <RadzenGrid @ref="UsersStore.GetState().UsersGrid"
                        AllowFiltering="true"
                        AllowPaging="true"
                        PageSize="5"
                        AllowSorting="true"
                        Data="@UsersStore.GetState().Users"
                        TItem="UserModel"
                        Value="@UsersStore.GetState().SelectedUser"
                        RowSelect="@(args => RowSelected(args))">
                <Columns>
                    <RadzenGridColumn TItem="UserModel" Property="Name" Title="User Name" />
                    <RadzenGridColumn TItem="UserModel" Property="Email" Title="Email" />
                    <RadzenGridColumn TItem="UserModel" Property="UserRole" Title="Role" />
                    <RadzenGridColumn TItem="UserModel" Property="ProfileClaim" Title="Profile" />
                    <RadzenGridColumn TItem="UserModel" Property="LockoutEnabled" Title="Is Lockout Possible" />
                    <RadzenGridColumn TItem="UserModel" Property="LockoutEnd" Title="Lockout End Date" />
                    <RadzenGridColumn TItem="UserModel" Context="um" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="50px">
                        <Template Context="um">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteUser(um))">
                            </RadzenButton>
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </div>
    </RadzenCard>
</div>

@if (UsersStore.GetState().SelectedUser != null)
{
    <div class="section">
        <RadzenCard>
            <div class="columns is-0 is-centered mx-0 mb-6">
                <h3 class="my-0 mx-0"><b>Selected User: @UsersStore.GetState().SelectedUser?.Name</b></h3>
            </div>

            <div class="columns is-0 is-centered">
                <h3>Current Role</h3>
            </div>
            <div class="columns is-0 is-centered mb-6">
                <RadzenSelectBar @bind-Value="UsersStore.GetState().SelectedRole" TValue="int" Change="@((args) => RoleChanged(args))">
                    <Items>
                        <RadzenSelectBarItem Text="Administrators" Value="0" />
                        <RadzenSelectBarItem Text="Users" Value="1" />
                    </Items>
                </RadzenSelectBar>
            </div>

            <div class="columns is-0 is-centered">
                <h3>Lock User</h3>
            </div>
            <div class="columns is-0 is-centered mb-6">
                <RadzenSelectBar @bind-Value="UsersStore.GetState().Lock" TValue="bool" Change="@((args) => LockUser(args))">
                    <Items>
                        <RadzenSelectBarItem Text="Locked" Value="true" />
                        <RadzenSelectBarItem Text="Unlocked" Value="false" />
                    </Items>
                </RadzenSelectBar>
            </div>

            <div class="columns is-0 is-centered">
                <h2>Current Claims</h2>
            </div>
            <div class="columns is-0 is-centered">
                <RadzenGrid @ref="UsersStore.GetState().ClaimsGrid"
                            AllowFiltering="true"
                            AllowPaging="true"
                            PageSize="5"
                            AllowSorting="true"
                            EditMode="DataGridEditMode.Single"
                            Data="@UsersStore.GetState().SelectedUser.Claims"
                            TItem="Claim">
                    <Columns>
                        <RadzenGridColumn TItem="Claim" Property="Type" Title="Type" />
                        <RadzenGridColumn TItem="Claim" Property="Value" Title="Value" />

                        <RadzenGridColumn TItem="Claim" Context="claim" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="50px">
                            <Template Context="claim">
                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteClaimRow(claim))">
                                </RadzenButton>
                            </Template>
                        </RadzenGridColumn>
                    </Columns>
                </RadzenGrid>
            </div>
            <div class="columns is-vcentered is-centered">
                <div class="column is-one-third">
                    <div class="columns is-0 is-centered">
                        <h3>Application Claims</h3>
                    </div>
                    <div class="columns is-0 is-centered">
                        <RadzenDropDown AllowClear="true" TValue="string"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                                        Data="@UsersStore.GetState().Claims" @bind-Value="UsersStore.GetState().SelectedApplicationClaim" Style="width: 250px;" />
                    </div>
                    <div class="columns is-0 is-centered">
                        <RadzenButton Click="@(() => AddApplicationClaim())" Text="Add Application Claim" Style="width: 250px;" />
                    </div>
                </div>
                <div class="column is-one-third">
                    <div class="columns is-0 is-centered">
                        <h3>User Status Claims</h3>
                    </div>
                    <div class="columns is-0 is-centered">
                        <RadzenDropDown AllowClear="true" TValue="string"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                                        Data="@UsersStore.GetState().StatusClaims" @bind-Value="UsersStore.GetState().SelectedStatusClaim" Style="width: 250px;" />
                    </div>
                    <div class="columns is-0 is-centered">
                        <RadzenButton Click="@(() => AddStatusClaim())" Text="Add Status Claim" Style="width: 250px;" />
                    </div>
                </div>
                <div class="column is-one-third">
                    <div class="columns is-0 is-centered">
                        <h3>Profile Claim Name</h3>
                    </div>
                    <div class="columns is-0 is-centered">
                        <RadzenTextBox @bind-Value="@UsersStore.GetState().ProfileClaimName" MaxLength="50" Style="width: 250px;" />
                    </div>
                    <div class="columns is-0 is-centered">
                        <RadzenButton Click="@(() => AddProfileClaim())" Text="Add Profile Claim" Style="width: 250px;" />
                    </div>
                </div>
            </div>
        </RadzenCard>
    </div>
}


