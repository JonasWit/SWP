@*@using SWP.UI.Components.LegalSwpBlazorComponents.App.CasesComponentsApps 

<RadzenGrid @ref="App.CasesGrid" AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true"
            Data="@App.MainApp.ActiveClientWithData.Cases" TItem="CaseViewModel" RowUpdate="@App.OnUpdateCaseRow" RowSelect="@(args => App.ActiveCaseChange(args))">
    <Columns>
        <RadzenGridColumn TItem="CaseViewModel" Property="Name" Title="Nazwa Sprawy">
            <EditTemplate Context="cs">
                <RadzenTextBox @bind-Value="cs.Name" Style="width:100%; display: block" Name="CaseName" />
                <RadzenRequiredValidator Text="Nazwa nie może być pusta!" Component="CaseName" Popup="true" />
                <RadzenLengthValidator Max="50" Text="Max 50 characters!" Component="CaseName" Popup="true" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="Signature" Title="Sygnatura">
            <EditTemplate Context="cs">
                <RadzenTextBox @bind-Value="cs.Signature" Style="width:100%; display: block" Name="Sygnatura" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="CaseType" Title="Typ Sprawy">
            <EditTemplate Context="cs">
                <RadzenTextBox @bind-Value="cs.CaseType" Style="width:100%; display: block" Name="Typ sprawy" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="Description" Title="Opis">
            <EditTemplate Context="cs">
                <Radzen.Blazor.RadzenTextArea @bind-Value="cs.Description" Style="width:100%; display: block" Name="Description" />
                <RadzenLengthValidator Max="500" Text="Max 500 characters!" Component="Description" Popup="true" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="Created" Title="@GeneralViewModel.Created">
            <Template Context="cs">
                @cs.Created.ToString(GeneralViewModel.DateFormant)
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="Updated" Title="@GeneralViewModel.Updated">
            <Template Context="cs">
                @cs.Updated.ToString(GeneralViewModel.DateFormant)
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="UpdatedBy" Title="@GeneralViewModel.UpdatedBy">
            <Template Context="cs">
                @cs.UpdatedBy
            </Template>
        </RadzenGridColumn>

        <RadzenGridColumn TItem="CaseViewModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px" Title="Edytuj">
            <Template Context="cs">
                <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@((args) => App.EditCaseRow(cs))">
                </RadzenButton>
            </Template>
            <EditTemplate Context="cs">
                <RadzenButton Icon="save" Size="ButtonSize.Medium" Click="@((args) => App.SaveCaseRow(cs))">
                </RadzenButton>
                <RadzenButton Icon="cancel" Size="ButtonSize.Medium" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => App.CancelEditCaseRow(cs))">
                </RadzenButton>
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Context="order" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px" Title="Usuń">
            <Template Context="cs">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(async (args) => await App.DeleteCaseRow(cs))">
                </RadzenButton>
            </Template>
            <EditTemplate Context="cs">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(async (args) => await App.DeleteCaseRow(cs))">
                </RadzenButton>
            </EditTemplate>
        </RadzenGridColumn>

    </Columns>
</RadzenGrid>

@code {
    [Parameter]
    public CasesGridComponentApp App { get; set; }
    [Parameter]
    public EventCallback<CasesGridComponentApp> AppChanged { get; set; }
}*@
