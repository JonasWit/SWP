@using SWP.UI.BlazorApp.LegalApp.Stores.Clients


@if (ClientsStore.Loading)
{
    <LoaderComponent Message="@ClientsStore.LoadingMessage"></LoaderComponent>
}
else
{
    <h1 class="testclass">TEST</h1>

    <div class="flex-container-main">

        <div class="show-hide tab-section"><button class="show-hide-btn show-hide-btn-1"><span>Dodaj Klienta</span></button></div>
        <div class="row-section">
            <RadzenTemplateForm Data="@ClientsStore.GetState().NewClient" Submit="@(async (CreateClient.Request args) => { await ClientsStore.SubmitNewClient(args); })">
                <RadzenFieldset Text="Nowy Klient">
                    <div class="help-box">
                        <i class="user-icon"><img src="/Images/icons8-reception-36.png" /></i>
                        @if (addClientformVisible)
                        {
                            <div class="info-text">
                                <p>Zarządzaj listą swoich klientów. Użyj guzika "Dodaj Nowego Klienta",aby uzupełnić listę kontaktów.</p>
                                <p>Edytuj oraz usuwaj Klientów z głównej listy. Tekst do zupełnienia.</p>
                            </div>
                        }
                        <button class="info" @onclick="ShowHideClientFormI"></button>
                    </div>
                    <div class="form ">
                        <div class="text">
                            <div class="label">
                                <RadzenLabel Text="Nazwa" />
                            </div>
                            <RadzenTextArea Placeholder="Nazwa..." @bind-Value="ClientsStore.GetState().NewClient.Name" style="@Gvm.FormInputBoxWidth" Name="Nazwa" />
                            <RadzenRequiredValidator Component="Nazwa" Text="Nazwa nie może być pusta!" style="@Gvm.FormInputBoxWidth" />
                            <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Nazwa" Style="position: absolute" />
                        </div>
                        <div class="text">
                            <div class="label">
                                <RadzenLabel Text="Adres" />
                            </div>
                            <RadzenTextArea Placeholder="Adres..." @bind-Value="ClientsStore.GetState().NewClient.Address" style="@Gvm.FormInputBoxWidth" Name="Address" />
                            <RadzenLengthValidator Max="200" Text="Maksymalnie 200 znaków!" Component="Address" Style="position: absolute" />
                        </div>
                    </div>
                    <div class="form ">

                        <div class="text">
                            <div class="label">
                                <RadzenLabel Text="Telefon" />
                            </div>
                            <RadzenTextBox Placeholder="Telefon..." @bind-Value="ClientsStore.GetState().NewClient.PhoneNumber" style="@Gvm.FormInputBoxWidth" Name="PhoneNumber" />
                            <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="PhoneNumber" Style="position: absolute" />
                        </div>
                        <div class="text">
                            <div class="label">
                                <RadzenLabel Text="Email" />
                            </div>
                            <RadzenTextBox Placeholder="Adres Email..." @bind-Value="ClientsStore.GetState().NewClient.Email" style="@Gvm.FormInputBoxWidth" Name="Email" />
                            <RadzenEmailValidator Component="Email" Text="Nieprawidłowy adres Email!" />
                            <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Email" />
                        </div>
                    </div>
                    <div class="form-btn">
                        <div class="btn-add">
                            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Dodaj Klienta" ButtonStyle="ButtonStyle.Secondary" Style="@(Gvm.GeneralButton)" />
                        </div>
                    </div>
                </RadzenFieldset>
            </RadzenTemplateForm>
        </div>


        <div class="show-hide tab-section"><button class="show-hide-btn show-hide-btn-1"><span>Lista Klientów</span></button></div>
        <div class="row-section second">
            <div class="help-box">
                <i class="user-icon"><img src="/Images/icons8-reception-36.png" /></i>

                @if (clientListInfoVisible)
                {
                    <div class="info-text">
                        <p>Zarządzaj listą swoich klientów. Użyj guzika "Dodaj Nowego Klienta",aby uzupełnić listę kontaktów.</p>
                        <p>Edytuj oraz usuwaj Klientów z głównej listy. Tekst do zupełnienia.</p>
                    </div>
                }
                <button class="info" @onclick="ShowHideClientI"></button>
            </div>

            <div class="list-table">
                <RadzenGrid @ref="ClientsStore.GetState().ClientsGrid" AllowFiltering="true" AllowPaging="true" PageSize="10" AllowSorting="true"
                            Data="@MainStore.GetState().Clients" TItem="ClientViewModel" RowUpdate="@ClientsStore.OnUpdateClientRow" RowSelect="@(args => ClientsStore.ClientSelected(args))">
                    <Columns>
                        <RadzenGridColumn TItem="ClientViewModel" Property="Name" Title="Nazwa">
                            <Template Context="client">
                                <span Style="@(Gvm.TableFontSize)">@(client.Name)</span>
                            </Template>
                            <EditTemplate Context="client">
                                <RadzenTextBox @bind-Value="client.Name" Name="Nazwa" Style="@Gvm.FormInputBoxWidth" />
                                <RadzenRequiredValidator Text="Nazwa nie może być pusta!" Component="Nazwa" Popup="true" />
                                <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Nazwa" Popup="true" />
                            </EditTemplate>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="ClientViewModel" Property="Address" Title="Adres">
                            <Template Context="client">
                                <span Style="@(Gvm.TableFontSize)">@(client.Address)</span>
                            </Template>
                            <EditTemplate Context="client">
                                <RadzenTextBox @bind-Value="client.Address" Name="Adres" Style="@Gvm.FormInputBoxWidth" />
                                <RadzenLengthValidator Max="200" Text="Maksymalnie 200 znaków!" Component="Adres" Popup="true" Style="position: absolute" />
                            </EditTemplate>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="ClientViewModel" Property="Email" Title="Email">
                            <Template Context="client">
                                <span Style="@(Gvm.TableFontSize)">@(client.Email)</span>
                            </Template>
                            <EditTemplate Context="client">
                                <RadzenTextBox @bind-Value="client.Email" Name="Email" Style="@Gvm.FormInputBoxWidth" />
                                <RadzenEmailValidator Component="Email" Text="Nieprawidłowy adres Email!" Popup="true" />
                                <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Email" Popup="true" Style="position: absolute" />
                            </EditTemplate>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="ClientViewModel" Property="PhoneNumber" Title="Telefon">
                            <EditTemplate Context="client">
                                <RadzenTextBox @bind-Value="client.PhoneNumber" Name="Telefon" Style="@Gvm.FormInputBoxWidth" />
                                <RadzenLengthValidator Max="50" Text="Maksymalnie 50 znaków!" Component="Telefon" Popup="true" Style="position: absolute" />
                            </EditTemplate>
                        </RadzenGridColumn>

                        <RadzenGridColumn TItem="ClientViewModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="80px">
                            <Template Context="client">
                                <RadzenButton Icon="edit" Size="ButtonSize.Small" Click="@(args => EditClientRow(client))" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions { Text = "Edytuj", Style = Gvm.ToolTipStyle }))">
                                    >
                                </RadzenButton>
                            </Template>
                            <EditTemplate Context="client">
                                <RadzenButton Icon="save" Size="ButtonSize.Small" Click="@((args) => ClientsStore.SaveClientRow(client))" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions { Text = "Zapisz", Style = Gvm.ToolTipStyle }))">
                                </RadzenButton>
                                <RadzenButton Icon="cancel" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Success" Click="@((args) => ClientsStore.CancelClientEdit(client))" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions { Text = "Anuluj", Style = Gvm.ToolTipStyle }))">
                                </RadzenButton>
                            </EditTemplate>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="ClientViewModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="45px">
                            <Template Context="client">
                                <RadzenButton ButtonStyle="ButtonStyle.Warning" Icon="archive" Size="ButtonSize.Small" Click="@(async (args) => await ClientsStore.ArchivizeClient(client))" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions { Text = "Archiwizuj", Style = Gvm.ToolTipStyle }))">
                                </RadzenButton>
                            </Template>
                            <EditTemplate Context="client">
                            </EditTemplate>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="ClientViewModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="45px">
                            <Template Context="client">
                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(async (args) => await ClientsStore.DeleteClientRow(client))" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions { Text = "Usuń", Style = Gvm.ToolTipStyle }))">
                                </RadzenButton>
                            </Template>
                            <EditTemplate Context="client">
                            </EditTemplate>
                        </RadzenGridColumn>
                    </Columns>
                </RadzenGrid>
            </div>
        </div>

        @if (ClientsStore.GetState().SelectedClient != null)
        {
            <div class="details">
                <p><strong>Nazwa:</strong> @ClientsStore.GetState().SelectedClient.Name</p>
                <p><strong>Adres:</strong> @ClientsStore.GetState().SelectedClient.Address</p>
                <p><strong>Telefon:</strong> @ClientsStore.GetState().SelectedClient.PhoneNumber</p>
                <p><strong>Email:</strong> @ClientsStore.GetState().SelectedClient.Email</p>
                <p><strong>Zmienione przez:</strong> @ClientsStore.GetState().SelectedClient.UpdatedBy</p>
                <p><strong>Data zmiany:</strong> @ClientsStore.GetState().SelectedClient.Updated</p>
                <p><strong>Data utworzenia:</strong> @ClientsStore.GetState().SelectedClient.Created</p>
            </div>
        }

    </div>
}
