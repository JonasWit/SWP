@implements IDisposable
@inject AdminBlazorApp adminBlazorApp

<header>
    <h2>Admin Panel</h2>
    <RadzenButton @onclick="@(() => vm.SetActivePanel(AdminMainComponentViewModel.Panels.Users))">Users Management</RadzenButton>
</header>

<main>
    <div>
        @switch (vm.ActivePanel)
        {
            case AdminMainComponentViewModel.Panels.Users:
                <AdminUsersComponent ActiveUserId="@ActiveUserId"></AdminUsersComponent>
                break;
            case AdminMainComponentViewModel.Panels.Licenses:
                break;
            default:
                break;
        }
    </div>
</main>

<footer>Footer Content — Header.com 2020</footer>

@code {
    [Parameter]
    public string ActiveUserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await adminBlazorApp.Initialize(ActiveUserId);
        adminBlazorApp.CallStateHasChanged += new EventHandler(CallStateHasChanged);
    }

    private void CallStateHasChanged(object sender, EventArgs e) => StateHasChanged();

    public void Dispose() => adminBlazorApp.CallStateHasChanged -= new EventHandler(CallStateHasChanged);


    private AdminMainComponentViewModel vm = new AdminMainComponentViewModel();
}
