<div class="section">
    <RadzenCard>
        <div class="columns is-0 is-centered">
            <h2>Users</h2>
        </div>
        <div class="columns is-0 is-centered">
            <RadzenGrid @ref="UsersStore.GetState().UsersGrid"
                        AllowFiltering="true"
                        AllowPaging="true"
                        PageSize="5"
                        AllowSorting="true"
                        Data="@UsersStore.GetState().Users"
                        TItem="UserModel"
                        Value="@UsersStore.GetState().SelectedUser"
                        RowSelect="@(args => RowSelected(args))">
                <Columns>
                    <RadzenGridColumn TItem="UserModel" Property="Name" Title="User Name" />
                    <RadzenGridColumn TItem="UserModel" Property="Email" Title="Email" />
                    <RadzenGridColumn TItem="UserModel" Property="UserRole" Title="Role" />
                    <RadzenGridColumn TItem="UserModel" Property="ProfileClaim" Title="Profile" />
                    <RadzenGridColumn TItem="UserModel" Property="LockoutEnabled" Title="Is Lockout Possible" />
                    <RadzenGridColumn TItem="UserModel" Property="LockoutEnd" Title="Lockout End Date" />
                    <RadzenGridColumn TItem="UserModel" Context="um" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="50px">
                        <Template Context="um">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteUser(um))">
                            </RadzenButton>
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </div>
    </RadzenCard>
</div>

@if (UsersStore.GetState().SelectedUser != null)
{
    <div class="section">
        <RadzenCard>
            <div class="columns is-0 is-centered mx-0 mb-6">
                <h3 class="my-0 mx-0"><b>Selected User: @UsersStore.GetState().SelectedUser?.Name</b></h3>
            </div>

            <div class="columns is-0 is-centered">
                <h3>Current Role</h3>
            </div>
            <div class="columns is-0 is-centered mb-6">
                <RadzenSelectBar @bind-Value="UsersStore.GetState().SelectedRole" TValue="int" Change="@((args) => RoleChanged(args))">
                    <Items>
                        <RadzenSelectBarItem Text="Administrators" Value="0" />
                        <RadzenSelectBarItem Text="Users" Value="1" />
                    </Items>
                </RadzenSelectBar>
            </div>

            <div class="columns is-0 is-centered">
                <h3>Lock User</h3>
            </div>
            <div class="columns is-0 is-centered mb-6">
                <RadzenSelectBar @bind-Value="UsersStore.GetState().Lock" TValue="bool" Change="@((args) => LockUser(args))">
                    <Items>
                        <RadzenSelectBarItem Text="Locked" Value="true" />
                        <RadzenSelectBarItem Text="Unlocked" Value="false" />
                    </Items>
                </RadzenSelectBar>
            </div>

            <div class="columns is-0 is-centered">
                <h2>Current Claims</h2>
            </div>
            <div class="columns is-0 is-centered mb-6">
                <RadzenGrid @ref="UsersStore.GetState().ClaimsGrid"
                            AllowFiltering="true"
                            AllowPaging="true"
                            PageSize="5"
                            AllowSorting="true"
                            EditMode="DataGridEditMode.Single"
                            Data="@UsersStore.GetState().SelectedUser.Claims"
                            TItem="Claim">
                    <Columns>
                        <RadzenGridColumn TItem="Claim" Property="Type" Title="Type" />
                        <RadzenGridColumn TItem="Claim" Property="Value" Title="Value" />

                        <RadzenGridColumn TItem="Claim" Context="claim" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="50px">
                            <Template Context="claim">
                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteClaimRow(claim))">
                                </RadzenButton>
                            </Template>
                        </RadzenGridColumn>
                    </Columns>
                </RadzenGrid>
            </div>

            <div class="rows">
                <div class="row is-full mb-6">
                    <div class="columns">
                        <div class="column">
                            <div class="columns is-0 is-centered">
                                <h3>Application Claims</h3>
                            </div>
                            <div class="columns is-0 is-centered">
                                <RadzenDropDown AllowClear="true" TValue="string"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                                                Data="@UsersStore.GetState().Claims" @bind-Value="UsersStore.GetState().SelectedApplicationClaim" Style="width: 250px;" />
                            </div>
                            <div class="columns is-0 is-centered">
                                <RadzenButton Click="@(() => AddApplicationClaim())" Text="Add Application Claim" Style="width: 250px;" />
                            </div>
                        </div>
                        <div class="column">
                            <RadzenTemplateForm TItem="string" Data=@UsersStore.GetState().ProfileClaimName Submit=@AddProfileClaim>
                                <div class="columns is-0 is-centered">
                                    <h3>Profile Claim Name</h3>
                                </div>
                                <div class="columns is-0 is-centered">
                                    <RadzenTextBox style="width: 250px; display: block" Name="ProfileName" @bind-Value=@UsersStore.GetState().ProfileClaimName />
                                    <RadzenRequiredValidator Component="ProfileName" Text="Profile Name is required" Popup=false Style="position: absolute" />
                                    <RadzenRegexValidator Component="ProfileName" Text="Profile Name is incorrect!" Pattern="^[a-zA-Z0-9''-'\s]{5,20}$" Popup=false Style="position: absolute" />
                                </div>
                                <div class="columns is-0 is-centered mb-6">
                                    <RadzenButton ButtonType="ButtonType.Submit" Style="width: 250px;" Text="Submit"></RadzenButton>
                                </div>
                            </RadzenTemplateForm>
                        </div>
                    </div>
                </div>
            </div>

            <div class="rows">
                <div class="row is-full mb-6">
                    <div class="columns">
                        <div class="column">
                            <div class="columns is-0 is-centered">
                                <h3>User Status Claims</h3>
                            </div>
                            <div class="columns is-0 is-centered">
                                <RadzenDropDown AllowClear="true" TValue="string"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                                                Data="@UsersStore.GetState().StatusClaims" @bind-Value="UsersStore.GetState().SelectedStatusClaim" Style="width: 250px;" />
                            </div>
                            <div class="columns is-0 is-centered">
                                <RadzenButton Click="@(() => AddStatusClaim())" Text="Add Status Claim" Style="width: 250px;" />
                            </div>
                        </div>
                        <div class="column">
                            <div class="columns is-0 is-centered">
                                <h3>Profile Claim Name</h3>
                            </div>
                            <div class="columns is-0 is-centered">
                                <RadzenListBox AllowFiltering="true"
                                               FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                               @bind-Value="SelectedClaim"
                                               Data="@UsersStore.GetState().AllProfiles"
                                               TextProperty="ProfileName"
                                               ValueProperty="Id"
                                               Change="@(args => SelectedProfileChange(args))"
                                               Style="height: 250px; outline: none; width: 250px;" />
                            </div>
                            <div class="columns is-0 is-centered">
                                <RadzenButton Click="@AddProfileClaimFromList" Text="Add Profile From List" Style="width: 250px;" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </RadzenCard>
    </div>

    @if (UsersStore.GetState().SelectedUser.RootClient)
    {
        //todo: add license management here!!!
        //todo: licencje powiazane sa osobnymi licencjami, trwaja tyle co licencja glowna
        //todo: oplaty miesiecznie albo do wyboru

        //todo: forma na dodanie licencji + datagrid na edycje itp
    }
}




