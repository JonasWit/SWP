
<RadzenGrid @ref="App.CasesPage.CasesGrid" AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true"
            Data="@App.ActiveClientWithData.Cases" TItem="CaseViewModel" RowUpdate="@App.CasesPage.OnUpdateCaseRow">
    <Columns>
        <RadzenGridColumn TItem="CaseViewModel" Property="Name" Title="Case Name">
            <EditTemplate Context="c">
                <RadzenTextBox @bind-Value="c.Name" Style="width:100%; display: block" Name="Nazwa" />
                <RadzenRequiredValidator Text="Nazwa nie może być pusta!" Component="Nazwa" Popup="true" />
                <RadzenLengthValidator Max="50" Text="Max 50 characters!" Component="Nazwa" Popup="true" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="Signature" Title="Signature">
            <EditTemplate Context="c">
                <RadzenTextBox @bind-Value="c.Signature" Style="width:100%; display: block" Name="Sygnatura" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="CaseType" Title="Type">
            <EditTemplate Context="c">
                <RadzenTextBox @bind-Value="c.CaseType" Style="width:100%; display: block" Name="Typ sprawy" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="Description" Title="Description">
            <EditTemplate Context="c">
                <Radzen.Blazor.RadzenTextArea @bind-Value="c.Description" Style="width:100%; display: block" Name="Description" />
                <RadzenLengthValidator Max="500" Text="Max 500 characters!" Component="Description" Popup="true" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="Created" Title="Created">
            <Template Context="c">
                @String.Format("{0:f}", c.Created)
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="Updated" Title="Last Change">
            <Template Context="c">
                @String.Format("{0:f}", c.Updated)
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Property="UpdatedBy" Title="Last Updated By">
            <Template Context="c">
                @c.UpdatedBy
            </Template>
        </RadzenGridColumn>

        <RadzenGridColumn TItem="CaseViewModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px" Title="Show Details">
            <Template Context="c">
                <RadzenButton Icon="reply" Size="ButtonSize.Medium" ButtonStyle="ButtonStyle.Secondary" Click="@(args => App.CasesPage.ActiveCaseChange(c))">
                </RadzenButton>
            </Template>
        </RadzenGridColumn>

        <RadzenGridColumn TItem="CaseViewModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px" Title="Edit">
            <Template Context="c">
                <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@(args => App.CasesPage.EditCaseRow(c))">
                </RadzenButton>
            </Template>
            <EditTemplate Context="c">
                <RadzenButton Icon="save" Size="ButtonSize.Medium" Click="@((args) => App.CasesPage.SaveCaseRow(c))">
                </RadzenButton>
                <RadzenButton Icon="cancel" Size="ButtonSize.Medium" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => App.CasesPage.CancelEditCaseRow(c))">
                </RadzenButton>
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="CaseViewModel" Context="order" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px" Title="Delete">
            <Template Context="c">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(async (args) => await App.CasesPage.DeleteCaseRow(c))">
                </RadzenButton>
            </Template>
            <EditTemplate Context="c">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(async (args) => await App.CasesPage.DeleteCaseRow(c))">
                </RadzenButton>
            </EditTemplate>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>

@if (App.ActiveClientWithData.SelectedCase == null)
{
    <h3>Brak aktywnej sprawy</h3>
}
else
{
    <h3>Aktywna sprawa - @App.ActiveClientWithData.SelectedCase.Name</h3>

    <RadzenTabs>
        <Tabs>
            <RadzenTabsItem Text="Calendar">
                <div class="row">
                    <div class="col-md-6">
                        <RadzenScheduler @ref="App.CasesPage.CasesScheduler" style="height: 768px;" TItem="ReminderViewModel" Data="@App.ActiveClientWithData.SelectedCase.Reminders" StartProperty="Start" EndProperty="End" TextProperty="Name" SelectedIndex="2" SlotSelect="@App.CasesPage.OnSlotSelect" AppointmentSelect="@App.CasesPage.OnAppointmentSelect" AppointmentRender="@App.CasesPage.OnAppointmentRender" TodayText="Dzisiaj">
                            <Template Context="data">
                                <strong>@data.Name</strong>
                            </Template>
                            <ChildContent>
                                <RadzenDayView Text="Dzień" StartTime="@(new TimeSpan(0, 0, 0))" EndTime="@(new TimeSpan(24, 0, 0))" />
                                <RadzenWeekView Text="Tydzień" StartTime="@(new TimeSpan(0, 0, 0))" EndTime="@(new TimeSpan(24, 0, 0))"  />
                                <RadzenMonthView Text="Miesiąc" />
                            </ChildContent>
                        </RadzenScheduler>
                    </div>

                    <RadzenCard Style="margin-bottom:20px">
                        Company:
                        <b>@App.ActiveClientWithData.SelectedCase.Name</b>

                        <div class="row">
                            <div class="col-md-6">
                                <div>Selected Case:</div>
                                <b>@App.ActiveClientWithData.SelectedCase.Name</b>
                            </div>
                            <div class="col-md-6">
                                <div>Signature:</div>
                                <b>@App.ActiveClientWithData.SelectedCase?.Signature</b>
                                <div style="margin-top:20px">Description:</div>
                                <b>@App.ActiveClientWithData.SelectedCase?.Description</b>
                            </div>
                        </div>
                    </RadzenCard>
                </div>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Notes">
                <div class="row">
                    <AdminCaseNoteForm @bind-App="App"></AdminCaseNoteForm>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <AdminCaseNotesGrid @bind-App="App"></AdminCaseNotesGrid>
                    </div>
                    <div class="col-md-4">
                        @if (App.ActiveClientWithData.SelectedCase != null &&
                           App.ActiveClientWithData.SelectedCase.SelectedNote != null)
                        {
                            <RadzenCard Style="margin-bottom:20px">
                                Note:
                                <b>@App.ActiveClientWithData.SelectedCase.SelectedNote.Name</b>
                            </RadzenCard>
                            <RadzenCard Style="margin-bottom:20px">
                                Details:
                                <b>@App.ActiveClientWithData.SelectedCase.SelectedNote.Message</b>
                            </RadzenCard>
                        }
                    </div>
                </div>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
}

@code {
    [Parameter]
    public LegalBlazorApp App { get; set; }
    [Parameter]
    public EventCallback<LegalBlazorApp> AppChanged { get; set; }
}
