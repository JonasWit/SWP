
<h1>Application</h1>

<div class="section">
    <RadzenCard>
        <div class="columns is-0 is-centered">
            <h2>Refresh Exceptions Data</h2>
        </div>
        <div class="columns is-0 is-centered">
            <RadzenButton ButtonStyle="ButtonStyle.Secondary" Click="@ApplicationsOptionsStore.RefreshLogs">Refresh</RadzenButton>
        </div>
    </RadzenCard>
</div>

<div class="section">
    <RadzenCard>
        <div class="columns is-0 is-centered">
            <h2>Recorded Exceptions</h2>
        </div>
        <div class="columns is-0 is-centered">
            <RadzenGrid @ref="ApplicationsOptionsStore.GetState().LogGrid"
                        AllowFiltering="true"
                        AllowPaging="true"
                        PageSize="5"
                        AllowSorting="true"
                        Data="@ApplicationsOptionsStore.GetState().LogRecords"
                        TItem="@LogRecordViewModel"
                        Value="@ApplicationsOptionsStore.GetState().SelectedLogRecord"
                        RowSelect="@(args => ApplicationsOptionsStore.RowSelected(args))">
                <Columns>
                    <RadzenGridColumn TItem="LogRecordViewModel" Property="UserId" Title="User" />
                    <RadzenGridColumn TItem="LogRecordViewModel" Property="Message" Title="Message" />
                    <RadzenGridColumn TItem="LogRecordViewModel" Property="StackTrace" Title="Stack Trace" />
                    <RadzenGridColumn TItem="LogRecordViewModel" Property="Created" Title="Created" />
                    <RadzenGridColumn TItem="LogRecordViewModel" Context="um" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="50px">
                        <Template Context="lr">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(async () => await ApplicationsOptionsStore.DeleteLogRecord(lr))">
                            </RadzenButton>
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </div>
    </RadzenCard>
</div>

@if (ApplicationsOptionsStore.GetState().SelectedLogRecord != null)
{
    <div class="section">
        <RadzenCard>
            <div class="columns is-0 is-centered">
                <h2>Exception Message</h2>
            </div>
            <div class="columns is-0 is-centered mb-4">
                <p>@ApplicationsOptionsStore.GetState().SelectedLogRecord.Message</p>
            </div>
        </RadzenCard>
    </div>
    <div class="section">
        <RadzenCard>
            <div class="columns is-0 is-centered">
                <h2>Exception Stack</h2>
            </div>
            <div class="columns is-0 is-centered mb-4">
                <p>@ApplicationsOptionsStore.GetState().SelectedLogRecord.StackTrace</p>
            </div>
        </RadzenCard>
    </div>
}


<RadzenButton Click="ApplicationStore.TestExceptionThrow">Test Exception</RadzenButton>
<RadzenButton Click="ApplicationsOptionsStore.ShowErrorPage">Test Exception2</RadzenButton>
