@using SWP.UI.Components.LegalSwpBlazorComponents.CustomersInnerComponents
@inject GeneralViewModel generalViewModel

<h2>Klienci</h2>

@if (App.ActiveCustomer != null)
{
    <RadzenButton Click="@(() => App.CustomersPage.SetActivePanel(CustomersPage.Panels.Main))" Text="Podsumowanie" Style="margin-bottom: 20px;" />
}

<RadzenButton Click="@(() => App.CustomersPage.SetActivePanel(CustomersPage.Panels.Admin))" Text="Administracja" Style="margin-bottom: 20px;" />

@if (App.ActiveCustomer != null && App.ActiveCustomerWithData != null)
{
    <RadzenButton Click="@(() => App.CustomersPage.SetActivePanel(CustomersPage.Panels.Jobs))" Text="Zadnia" Style="margin-bottom: 20px;" />
}

@if (App.ActiveCustomer == null)
{
    <AdminPanel @bind-App="App"></AdminPanel>
}
else
{
    switch (App.CustomersPage.ActivePanel)
    {
        case CustomersPage.Panels.Main:
            <MainPanel @bind-App="App"></MainPanel>
            break;
        case CustomersPage.Panels.Admin:
            <AdminPanel @bind-App="App"></AdminPanel>
            break;
        case CustomersPage.Panels.Jobs:
            <JobsPanel @bind-App="App"></JobsPanel>
            break;
        default:
            break;
    }
}

@code {
    [Parameter]
    public LegalBlazorApp App { get; set; }
    [Parameter]
    public EventCallback<LegalBlazorApp> AppChanged { get; set; }
}
